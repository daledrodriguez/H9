---
    - name: Disable SELinux
      shell: |
        sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux
      when: "'SELINUX=enforcing' in (ansible.builtin.shell('cat /etc/sysconfig/selinux').stdout | default(''))"

    - name: Reboot the system
      shell: |
        if [ "$(getenforce)" == "Disabled" ]; then
          reboot
        fi
      async: 0
      poll: 0
      when: "'SELINUX=disabled' in (ansible.builtin.shell('cat /etc/sysconfig/selinux').stdout | default(''))"

    - name: Download Prometheus
      shell: |
        wget https://github.com/prometheus/prometheus/releases/download/v2.8.1/prometheus-2.8.1.linux-amd64.tar.gz -O /tmp/prometheus-2.8.1.linux-amd64.tar.gz
      args:
        executable: /bin/bash

    - name: Add Prometheus User
      shell: |
        useradd --no-create-home --shell /bin/false prometheus
      args:
        executable: /bin/bash

    - name: Create Prometheus Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Extract Prometheus
      shell: |
        tar -xvzf /tmp/prometheus-2.8.1.linux-amd64.tar.gz -C /tmp/
        mv /tmp/prometheus-2.8.1.linux-amd64 /usr/local/bin/prometheuspackage
      args:
        executable: /bin/bash

    - name: Copy Prometheus Binaries
      shell: |
        cp /usr/local/bin/prometheuspackage/{{ item }} /usr/local/bin/
      loop:
        - prometheus
        - promtool

    - name: Change ownership of Prometheus Binaries
      shell: |
        chown prometheus:prometheus /usr/local/bin/{{ item }}
      loop:
        - prometheus
        - promtool

    - name: Copy Prometheus Console Files
      shell: |
        cp -r /usr/local/bin/prometheuspackage/{{ item }} /etc/prometheus/
      loop:
        - consoles
        - console_libraries

    - name: Change ownership of Prometheus Console Files
      shell: |
        chown -R prometheus:prometheus /etc/prometheus/{{ item }}
      loop:
        - consoles
        - console_libraries

    - name: Create Prometheus Config
      copy:
        content: |
          global:
            scrape_interval: 10s

          scrape_configs:
            - job_name: 'prometheus_master'
              scrape_interval: 5s
              static_configs:
                - targets: ['localhost:9090']
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus

    - name: Configure Prometheus Service
      copy:
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
          --config.file /etc/prometheus/prometheus.yml \
          --storage.tsdb.path /var/lib/prometheus/ \
          --web.console.templates=/etc/prometheus/consoles \
          --web.console.libraries=/etc/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root

    - name: Reload systemd service
      shell: systemctl daemon-reload
      args:
        executable: /bin/bash

    - name: Start Prometheus service
      shell: systemctl start prometheus
      args:
        executable: /bin/bash

    - name: Check service status
      shell: systemctl status prometheus
      args:
        executable: /bin/bash

    - name: Add Firewall Rules
      shell: firewall-cmd --zone=public --add-port=9090/tcp --permanent
      when: "'Loaded: loaded' in (ansible.builtin.shell('systemctl status prometheus').stdout | default(''))"

    - name: Reload Firewall Service
      shell: firewall-cmd --reload
      when: "'Loaded: loaded' in (ansible.builtin.shell('systemctl status prometheus').stdout | default(''))"
