---
    - name: Disable SELinux
      ansible.builtin.replace:
        path: /etc/sysconfig/selinux
        regexp: 'SELINUX=enforcing'
        replace: 'SELINUX=disabled'
      when: "'SELINUX=enforcing' in ansible.builtin.file.read('/etc/sysconfig/selinux')"
    
    - name: Reboot the system
      ansible.builtin.reboot:
      when: "'SELINUX=disabled' in ansible.builtin.file.read('/etc/sysconfig/selinux')"
    
    - name: Download Prometheus
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v2.8.1/prometheus-2.8.1.linux-amd64.tar.gz"
        dest: "/tmp/prometheus-2.8.1.linux-amd64.tar.gz"
    
    - name: Add Prometheus User
      ansible.builtin.user:
        name: prometheus
        shell: /bin/false
        createhome: no
    
    - name: Create Prometheus Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
      loop:
        - /etc/prometheus
        - /var/lib/prometheus
    
    - name: Extract Prometheus
      ansible.builtin.shell: |
        tar -xvzf /tmp/prometheus-2.8.1.linux-amd64.tar.gz -C /tmp/
        mv /tmp/prometheus-2.8.1.linux-amd64 /usr/local/bin/prometheuspackage
    
    - name: Copy Prometheus Binaries
      ansible.builtin.copy:
        src: "/usr/local/bin/prometheuspackage/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
      loop:
        - prometheus
        - promtool
    
    - name: Copy Prometheus Console Files
      ansible.builtin.copy:
        src: "/usr/local/bin/prometheuspackage/{{ item }}"
        dest: "/etc/prometheus/{{ item }}"
        owner: prometheus
        group: prometheus
        recurse: yes
      loop:
        - consoles
        - console_libraries
    
    - name: Create Prometheus Config
      ansible.builtin.copy:
        content: |
          global:
            scrape_interval: 10s

          scrape_configs:
            - job_name: 'prometheus_master'
              scrape_interval: 5s
              static_configs:
                - targets: ['localhost:9090']
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
    
    - name: Configure Prometheus Service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
          --config.file /etc/prometheus/prometheus.yml \
          --storage.tsdb.path /var/lib/prometheus/ \
          --web.console.templates=/etc/prometheus/consoles \
          --web.console.libraries=/etc/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/prometheus.service
    
    - name: Reload systemd service
      ansible.builtin.systemd:
        daemon_reload: yes
    
    - name: Start Prometheus service
      ansible.builtin.service:
        name: prometheus
        state: started
    
    - name: Add Firewall Rules
      ansible.builtin.firewalld:
        service: prometheus
        permanent: yes
      when: "'Loaded: loaded' in ansible.builtin.shell('systemctl status prometheus')"
    
    - name: Reload Firewall Service
      ansible.builtin.shell: firewall-cmd --reload
      when: "'Loaded: loaded' in ansible.builtin.shell('systemctl status prometheus')"
